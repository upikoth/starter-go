// Code generated by ogen, DO NOT EDIT.

package api

import (
	"fmt"

	"github.com/go-faster/errors"
)

func (s *ErrorResponseStatusCode) Error() string {
	return fmt.Sprintf("code %d: %+v", s.StatusCode, s.Response)
}

type ErrorResponse string

// ErrorResponseStatusCode wraps ErrorResponse with StatusCode.
type ErrorResponseStatusCode struct {
	StatusCode int
	Response   ErrorResponse
}

// GetStatusCode returns the value of StatusCode.
func (s *ErrorResponseStatusCode) GetStatusCode() int {
	return s.StatusCode
}

// GetResponse returns the value of Response.
func (s *ErrorResponseStatusCode) GetResponse() ErrorResponse {
	return s.Response
}

// SetStatusCode sets the value of StatusCode.
func (s *ErrorResponseStatusCode) SetStatusCode(val int) {
	s.StatusCode = val
}

// SetResponse sets the value of Response.
func (s *ErrorResponseStatusCode) SetResponse(val ErrorResponse) {
	s.Response = val
}

type Format string

const (
	FormatJSON Format = "json"
)

// AllValues returns all Format values.
func (Format) AllValues() []Format {
	return []Format{
		FormatJSON,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s Format) MarshalText() ([]byte, error) {
	switch s {
	case FormatJSON:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *Format) UnmarshalText(data []byte) error {
	switch Format(data) {
	case FormatJSON:
		*s = FormatJSON
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/UserInfo
type UserInfo struct {
	ID           string `json:"id"`
	DefaultEmail string `json:"default_email"`
}

// GetID returns the value of ID.
func (s *UserInfo) GetID() string {
	return s.ID
}

// GetDefaultEmail returns the value of DefaultEmail.
func (s *UserInfo) GetDefaultEmail() string {
	return s.DefaultEmail
}

// SetID sets the value of ID.
func (s *UserInfo) SetID(val string) {
	s.ID = val
}

// SetDefaultEmail sets the value of DefaultEmail.
func (s *UserInfo) SetDefaultEmail(val string) {
	s.DefaultEmail = val
}
