// Code generated by ogen, DO NOT EDIT.

package api

import (
	"context"

	ht "github.com/ogen-go/ogen/http"
)

// UnimplementedHandler is no-op Handler which returns http.ErrNotImplemented.
type UnimplementedHandler struct{}

var _ Handler = UnimplementedHandler{}

// V1CheckCurrentSession implements V1CheckCurrentSession operation.
//
// Получить информацию валидна ли текущая сессия.
//
// GET /api/v1/session
func (UnimplementedHandler) V1CheckCurrentSession(ctx context.Context, params V1CheckCurrentSessionParams) (r *SuccessResponse, _ error) {
	return r, ht.ErrNotImplemented
}

// V1CheckHealth implements V1CheckHealth operation.
//
// Получить информацию о работоспособности приложения.
//
// GET /api/v1/health
func (UnimplementedHandler) V1CheckHealth(ctx context.Context) (r *SuccessResponse, _ error) {
	return r, ht.ErrNotImplemented
}

// V1ConfirmRegistration implements V1ConfirmRegistration operation.
//
// Подтверждение заявки на регистрацию.
//
// PATCH /api/v1/registrations
func (UnimplementedHandler) V1ConfirmRegistration(ctx context.Context, req *V1RegistrationsConfirmRegistrationRequestBody) (r *V1RegistrationsConfirmRegistrationResponse, _ error) {
	return r, ht.ErrNotImplemented
}

// V1CreateRegistration implements V1CreateRegistration operation.
//
// Создать заявку на регистрацию пользователя.
//
// POST /api/v1/registrations
func (UnimplementedHandler) V1CreateRegistration(ctx context.Context, req *V1RegistrationsCreateRegistrationRequestBody) (r *V1RegistrationsCreateRegistrationResponse, _ error) {
	return r, ht.ErrNotImplemented
}

// V1CreateSession implements V1CreateSession operation.
//
// Создание сессии пользователя.
//
// POST /api/v1/sessions
func (UnimplementedHandler) V1CreateSession(ctx context.Context, req *V1SessionsCreateSessionRequestBody) (r *V1SessionsCreateSessionResponse, _ error) {
	return r, ht.ErrNotImplemented
}

// NewError creates *ErrorResponseStatusCode from error returned by handler.
//
// Used for common default response.
func (UnimplementedHandler) NewError(ctx context.Context, err error) (r *ErrorResponseStatusCode) {
	r = new(ErrorResponseStatusCode)
	return r
}
